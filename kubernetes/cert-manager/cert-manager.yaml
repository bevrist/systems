# ! Create secret first!
# kubectl create secret -n cert-manager generic cloudflare-api-token-secret --from-literal=api-token='<YOUR_API_TOKEN_HERE>'
# https://cert-manager.io/docs/configuration/acme/dns01/cloudflare/
# Permissions:
#   Zone - DNS - Edit
#   Zone - Zone - Read
# Zone Resources:
#   Include - Specific Zone - Domains you intend to issue certs for

---
# LetsEncrypt certificate issued vis dns token (staging by default)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-cluster-issuer
  namespace: cert-manager
spec:
 acme:
  # The ACME server URL
  # server: https://acme-staging-v02.api.letsencrypt.org/directory
  server: https://acme-v02.api.letsencrypt.org/directory
  email: brettevrist10@gmail.com
  privateKeySecretRef:
    name: letsencrypt
  solvers:
  - selector: {}  # {} means all domains
      # dnsNames:
      # - example.org
    dns01:
      cloudflare:
        # !! Remember to create a k8s secret before
        apiTokenSecretRef:
          name: cloudflare-api-token-secret
          key: api-token

---
# Self Signed certificate issuer (for internal connections)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-cluster-issuer
  namespace: cert-manager
spec:
  selfSigned: {}

---
# Self Signed certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: test-cert
  namespace: default
spec:
  commonName: example.com
  secretName: test-cert-secret
  dnsNames:
    - example.com
  issuerRef:
    name: selfsigned-cluster-issuer
    kind: ClusterIssuer
