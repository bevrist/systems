macchina -U

# Attempt backup script when opening new terminal windows
~/dev/backup/cron-backup.sh >> /tmp/cron-backup  2>> /tmp/cron-backup.txt

# using secretive instead of apple keychain
# ssh-add -q --apple-load-keychain

export HOMEBREW_NO_ENV_HINTS=1

### Aliases
# alias ls="ls -G"
alias ls="lsd"
# alias la="ls -lahG"
alias la="lsd -la"
# alias ll="ls -lhG"
alias ll="lsd -l"
alias k="kubectl"
alias d="docker"
alias p="podman"

### set default binaries:
## gnu-coreutils (default install with "g" prefix e.g. "gcat")
#export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
## gnu-findutils (default install with "g" prefix e.g. "gfind")
export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
# gnu-sed
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
# grep
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"

### Zsh Completions
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

### zsh prompt customizations
autoload -Uz compinit
# run compinit once every 24 hours
if [ ! -f ~/.zcompdump ]; then touch -t 201001010000 ~/.zcompdump; fi
if [ "$(( $(date +%s) - $(date -r ~/.zcompdump +%s) ))" -gt 86400 ]; then
  compinit
else
  compinit -C
fi

# auto cd
setopt autocd
# case insensitive tab completion
# zstyle ":completion:*" matcher-list "m:{a-z}={A-Z}"
zstyle ":completion:*" matcher-list "" "+m:{a-zA-Z}={A-Za-z}" "+r:|[._-]=* r:|=*" "+l:|=* r:|=*"
# up arrow down arrow history load
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down
# option+arrow shell navigation
bindkey "^[^[[C" forward-word # Right
bindkey "^[^[[D" backward-word # Left

# zsh-syntax-highlighting
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
(( ${+ZSH_HIGHLIGHT_STYLES} )) || typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[path]=none
ZSH_HIGHLIGHT_STYLES[path_prefix]=none

# zsh-autosuggestions
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

source <(kubectl completion zsh)
compdef k='kubectl'  #zsh-completion for `k` alias
source <(docker completion zsh)
compdef d='docker'   #zsh-completion for `d` alias
source <(podman completion zsh)
compdef p='podman'   #zsh-completion for `p` alias

# center justify text function
center() {
  if [ -z "$1" ]; then echo "usage: $0 'String' [Dividing Char] [Total Length]"; return; fi
  if [ -z "$2" ]; then 2='#'; fi
  if [ -z "$3" ]; then 3=40; fi
  echo $(perl -e "print '$2' x $3") $1 $(perl -e "print '$2' x $3")
}

# terminal-notifier function
notify() {
  if [ -z "$*" ]; then
    terminal-notifier -message "Ping."
    afplay /System/Library/Sounds/Ping.aiff
  else
    terminal-notifier -message "$*"
    afplay /System/Library/Sounds/Ping.aiff
  fi
}

# current data function
curr-date() {
  date +"%Y-%m-%d"
}

# file swap function
swap() {
  if [ -z "$2" ]; then echo "usage: $0 file1 file2"; return; fi
  if [[ -d $1 ]] || [[ -d $2 ]]; then echo "cannot swap a directory."; return; fi

  tmpfile=$(mktemp $(dirname "$1")/XXXXXX)
  mv "$1" "$tmpfile" && mv "$2" "$1" &&  mv "$tmpfile" "$2"
}

eval "$(atuin init zsh --disable-up-arrow)"
eval "$(starship init zsh)"